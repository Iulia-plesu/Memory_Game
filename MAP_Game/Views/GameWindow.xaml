<Window xmlns:local="clr-namespace:MAP_Game.Converters"
        x:Class="MAP_Game.View.GameWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Game Window" Height="600" Width="800"
        SizeToContent="Manual">

    <Window.Resources>
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <!-- Template for the ItemsControl that will create a uniform grid -->
        <ItemsPanelTemplate x:Key="UniformGridPanel">
            <UniformGrid Columns="{Binding Columns}" Rows="{Binding Rows}" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </ItemsPanelTemplate>

        <!-- Style for buttons to make them square and responsive -->
        <Style x:Key="CardButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="120"/>
            <Setter Property="Height" Value="120"/>
            <Setter Property="Margin" Value="0"/>
            <!-- No margin for buttons -->
            <Setter Property="Padding" Value="0"/>
            <!-- No padding for the button itself -->
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <!-- Add a style for the button container to control padding between images -->
        <Style x:Key="ButtonContainerStyle" TargetType="Button">
            <Setter Property="Margin" Value="5"/>
            <!-- Padding between images -->
        </Style>
    </Window.Resources>

    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <!-- Define RowDefinitions to separate timer and cards -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- This row will adjust based on content (timer) -->
            <RowDefinition Height="*"/>
            <!-- This row will take the remaining space (cards) -->
        </Grid.RowDefinitions>

        <!-- Timer TextBlock -->
        <TextBlock Name="TimerTextBlock" HorizontalAlignment="Center" VerticalAlignment="Center" 
                   FontSize="24" Margin="0,20,0,0" Grid.Row="0"/>

        <!-- Cards -->
        <ItemsControl ItemsSource="{Binding Tokens}" ItemsPanel="{StaticResource UniformGridPanel}" Grid.Row="1">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Command="{Binding DataContext.CardClickCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                            CommandParameter="{Binding}" Style="{StaticResource CardButtonStyle}"
                            IsEnabled="{Binding DataContext.IsGameActive, RelativeSource={RelativeSource AncestorType=Window}}">
                        <Button.Content>
                            <Grid>
                                <!-- Face-down image -->
                                <Image Source="/MAP_Game;component/Assets/FaceDownImage.jpg"
                                       Visibility="{Binding IsFaceUp, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=False}"
                                       Stretch="Uniform" Margin="0"/>

                                <!-- Face-up image -->
                                <Image Source="{Binding ImageBitmap}"
                                       Visibility="{Binding IsFaceUp, Converter={StaticResource BooleanToVisibilityConverter}}"
                                       Stretch="Uniform" Margin="0"/>
                            </Grid>
                        </Button.Content>
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</Window>
